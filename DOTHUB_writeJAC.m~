function [jac, jacFileName] = DOTHUB_writeJAC(rmapFileName,transportPackage,J,Jgm,basis)

% This script creates a .jac file, which organizes and stores Jacobians for
% DOT reconstruction.

% ####################### INPUTS ##########################################

% rmapFilename      :   The full path of the .rmap data file that was used to
%                       calculate the Jacobian(s)

% transportPackage  :   A string specifying the package used to calculate J.
%                       e.g. 'toast'

% J                 :   Two or more CW Jacobians in a matrix of dimensions 
%                       #wavelengths x #channels x #nodes
%                       Units are mm:
%                       d(ln(Intensity_active/Intensity_baseline))/d(absorbtion coefficient (mm-1))
%                       Note that the #nodes dimension can either be #nodes of
%                       the corresponding volume mesh in rmapFileName or the
%                       number of elements in the basis.

% Jgm               :   This is just for visualization and masking purposes. It
%                       contains the wavelength-averaged GM projection of the
%                       volume Jacobian. Dimensions of channel x #gm_nodes

% basis             :   (Optional) 1x3 vector specifying the dimensions of the basis in
%                       which J exists. If basis is parsed non-empty, J is assumed to be in a the
%                       basis corresponding to dimensions basis

% ####################### OUTPUTS #########################################

% jac           :  Structure containing all data inputs and a logData file
% jacFileName   :  The full path of the resulting .jac file.
% .jac file     :  File containing all data inputs and a logData file

% ####################### Dependencies ####################################

% #########################################################################
% RJC, UCL, April 2020
%
% ############################# Updates ###################################
% #########################################################################

% MANAGE VARIABLES
% #########################################################################

jac.J = J;
jac.Jgm = Jgm;

if exist('basis','var')
    if ~isempty(basis)
        jac.basis = basis;
    end
end

%Create logdata ###########################################################
ds = datestr(now,'yyyymmDDHHMMSS');
logData{1,1} = ['Created on: ' ds];
logData{2,1} = ['Derived from rmap file: ' rmapFileName];
logData{3,1} = ['Calculated using: ' transportPackage];
jac.logData = logDat


%Save .pre file ###########################################################
[pathstr, name, ext] = fileparts(rmapFileName);
name = name(1:end-15); %Extract base (.nirs) filename.
jacFileName = fullfile(pathstr,[name '_' ds '.jac']);
save(jacFileName,saveList{:});
fprintf(['.jac data file saved as ' jacFileName '\n']);

